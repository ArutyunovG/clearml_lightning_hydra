# MNIST-specific training configuration
epochs: 10
num_classes: 10

# MNIST-specific training overrides
train:
  # Loss configuration - MNIST uses CrossEntropy
  criterion:
    - name: "cross_entropy"
      class: torch.nn.CrossEntropyLoss
      weight: 1.0
      args: {}
  
  # Optimizer and scheduler inherited from defaults.yaml


# Trainer configuration inherited from defaults.yaml


# Metrics configuration per stage
metrics:
  train:
    # Training metrics - typically lighter to avoid slowing down training
    accuracy: 
      class: torchmetrics.Accuracy
      args:
        task: multiclass
        num_classes: ${num_classes}
  
  val:
    # Validation metrics - more comprehensive for model evaluation
    accuracy: 
      class: torchmetrics.Accuracy
      args:
        task: multiclass
        num_classes: ${num_classes}
    f1_score:
      class: torchmetrics.F1Score
      args:
        task: multiclass
        num_classes: ${num_classes}
        average: macro
    precision:
      class: torchmetrics.Precision
      args:
        task: multiclass
        num_classes: ${num_classes}
        average: macro
    recall:
      class: torchmetrics.Recall
      args:
        task: multiclass
        num_classes: ${num_classes}
        average: macro

